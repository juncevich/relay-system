version: '2.4'
services:

  config-server:
    image: alexunc/rs_config-server:latest
    ports:
      - 8888:8888
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8888/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - common

  service-discovery:
    environment:
      - CONFIG_SERVICE_URL=config-server
    image: alexunc/rs_service-discovery:latest
    ports:
      - 8761:8761
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - common

  api-gateway:
    environment:
      - DISCOVERY_SERVICE_URL=service-discovery
    image: alexunc/rs_api-gateway:latest
    ports:
      - 8765:8765
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8765/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - common
  #        condition: service_healthy


  data-service:
    image: alexunc/data-service:latest
    ports:
      - 9091:8080
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8082/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - common
  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: user
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 1s
      timeout: 1s
      retries: 60
    networks:
      - common
  #  elasticsearch:
  #    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
  #    ports:
  #      - 9200:9200
  #      - 9300:9300
  #    volumes:
  ##      - ./config/elasticsearch/data:/usr/share/elasticsearch/data:rw
  #      - es_data:/usr/share/elasticsearch/data:rw
  #    networks:
  #      - common
  #  kibana:
  #    image: docker.elastic.co/kibana/kibana:6.3.2
  #    ports:
  #      - 5601:5601
  #    depends_on:
  #      - elasticsearch
  #    networks:
  #      - common
  #  logstash:
  #    image: docker.elastic.co/logstash/logstash:6.3.2
  #    ports:
  #      - 25826:25826
  #    volumes:
  #      - ./config/elk:/elk-config
  #      - ./logs/:/logs
  #    command: logstash -f /elk-config/logstash.config
  #    depends_on:
  #      - elasticsearch
  #    networks:
  #      - common
  #networks:
  #  common:
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - common

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    networks:
      - common

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
volumes:
  es_data:
  #  relay-service:
  #    build:
  #      context: backend/
  #      dockerfile: Dockerfile
  #    restart: always
  #    ports:
  #      - 8080:8080
  #    container_name: backend
  #    links:
  #      - mongo-relay-service
  #    environment:
  #      - ADDITIONAL_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
  #      - MONGODB_HOST=mongo
  #      - MONGODB_PORT=27017
  #      - MONGODB_USERNAME=test
  #      - MONGODB_PASSWORD=test
  #      - MONGODB_DATABASE=test
  #
  #    depends_on:
  #      - mongo-relay-service
  #    ports:
  #      - "5005:5005"
  #      - "8080:8080"  

networks:
  common:
    enable_ipv6: false
