buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'com.moowork.node'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

node {
    version = '7.9.0'
    npmVersion = '4.2.0'
    download = true
    workDir = file("${project.projectDir}/frontend/node")
    nodeModulesDir = file("${project.projectDir}/frontend")
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.postgresql:postgresql')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

bootRun.dependsOn(buildClientDev)
task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'build'
    description = 'Compile client side folder for development'
    args = ['run', 'buildDev']
}

bootRun.dependsOn(buildClientDev)
//
//task buildClient(type: NpmTask, dependsOn: 'npmInstall') {
//    group = 'build'
//    description = "Compile client side folder for production"
//    args = ['run', 'build']
//}
//
//task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
//    group = 'application'
//    description = "Build and watches the client side assets for rebuilding"
//    args = ['run', 'buildWatch']
//}
//
//bootRun.dependsOn(buildClientDev)
//
//jar.dependsOn(buildClient)
