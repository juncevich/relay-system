
buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url 'https://repo.spring.io/libs-release' }
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}
plugins {
    id 'nebula.release' version '11.0.0'
}

nebulaRelease {
    Set<String> releaseBranchPatterns = [/master/, /HEAD/, /(release(-|\/))?\d+(\.\d+)?\.x/, /v?\d+\.\d+\.\d+/] as Set
    Set<String> excludeBranchPatterns = [] as Set
    String shortenedBranchPattern = /(?:(?:bugfix|feature|hotfix|release)(?:-|\/))?(.+)/
}

group = 'com.relay-system.ms'
version = "0.0.1-SNAPSHOT"



ext {
    springProjects = [project(':data-service'),
                      project(':netflix-eureka-naming-server'),
                      project(':netflix-zuul-api-gateway'),
                      project(':spring-cloud-config-server'),
                      project(':zipkin-distributed-tracing-server'),
                      project(':relay-convert-service'),
                      project(':relay-exchange-service'),
                      project(':relay-service'),
                      project(':history-service')
    ]
    frontendProjects = [
            project(':frontend')
    ]
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "org.sonarqube"

group = 'com.relay-system.ms'
version = "0.0.1-SNAPSHOT"

configure(springProjects) {
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    dependencies {
        runtime('org.springframework.boot:spring-boot-devtools')
        compileOnly('org.projectlombok:lombok')
        annotationProcessor('org.projectlombok:lombok')
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
    repositories {
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'https://repo.spring.io/libs-milestone' }
        mavenCentral()
        jcenter()
    }

    dependencyManagement {
        dependencies {
            dependency 'org.projectlombok:lombok:1.18.4'
            dependency 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.17.2'
        }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '5.0'
    }
}

        
