---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: data-service
    app.kubernetes.io/version: 0.0.2-SNAPSHOT
  name: data-service-srv
spec:
  ports:
    - name: http
      port: 8082
      targetPort: 8082
  selector:
    app.kubernetes.io/name: data-service
    app.kubernetes.io/version: 0.0.2-SNAPSHOT
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-service
  labels:
    app.kubernetes.io/name: data-service
    app.kubernetes.io/version: 0.0.2-SNAPSHOT
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-service
      app.kubernetes.io/name: data-service
      app.kubernetes.io/version: 0.0.2-SNAPSHOT
  template:
    metadata:
      annotations:
        app.dekorate.io/commit-id: 7937c4540c5af8396361615ae220c0112f3ddd42
        app.dekorate.io/vcs-url: https://github.com/juncevich/relay-system.git
      labels:
        app: data-service
        app.kubernetes.io/name: data-service
        app.kubernetes.io/version: 0.0.2-SNAPSHOT
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: alexunc/data-service:0.0.2-SNAPSHOT
          imagePullPolicy: IfNotPresent
          name: data-service
#          volumeMounts:
#            - name: mongodb
#              mountPath: /etc/secretspot
          ports:
            - containerPort: 8082
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: "0.2"
              memory: 300Mi
            limits:
              cpu: "1.0"
              memory: 300Mi
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 60
            timeoutSeconds: 2
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/info
            initialDelaySeconds: 60
            timeoutSeconds: 2
            periodSeconds: 20
            failureThreshold: 5
#      volumes:
#        - name: mongodb
#          secret:
#            secretName: department
#      serviceAccountName: api-service-account
---
apiVersion: v1
kind: Secret
metadata:
  name: data-service
type: Opaque
data:
  spring.data.mongodb.username: bW9uZ28tYWRtaW4=
  spring.data.mongodb.password: bW9uZ28tYWRtaW4tcGFzc3dvcmQ=
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: department
data:
  logging.pattern.console: "%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n"
  spring.cloud.kubernetes.discovery.all-namespaces: "true"
  spring.data.mongodb.database: "admin"
  spring.data.mongodb.host: "mongodb.mongo.svc.cluster.local"
  spring.output.ansi.enabled: "ALWAYS"
