plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-spring-boot-application' version '6.1.2'
    id "nebula.release" version "14.1.0"
}

group = 'com.relay-system.ms.gateway'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}
repositories {
    mavenCentral()
}
ext {
    set('springCloudVersion', "Hoxton.SR1")
    dockerImage = "alexunc/rs_api-gateway"
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
//    implementation 'org.springframework.cloud:spring-cloud-bus'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    compile('org.springframework.cloud:spring-cloud-starter-sleuth')
//    compile('org.springframework.cloud:spring-cloud-sleuth-zipkin')
//    compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
//    compile('org.springframework.cloud:spring-cloud-starter-bus-amqp')
    compile("org.springframework.cloud:spring-cloud-starter-contract-stub-runner") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-web"
    }
}


docker {
    registryCredentials {
        url = "https://index.docker.io/v1/"
        username = System.getenv('DOCKER_LOGIN')
        password = System.getenv('DOCKER_PASS')
    }
    springBootApplication {
        baseImage = 'openjdk:11'
//        innerPort = System.getenv('INNER_PORT')
//        outerPort = System.getenv('OUTER_PORT')
//        ports = [innerPort, outerPort]
        ports = [8765, 8765]
        images = ["${dockerImage}:" + project.version, "${dockerImage}" + ':latest']
    }
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
